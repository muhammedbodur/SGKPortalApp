// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGKPortalApp.DataAccessLayer.Context;

#nullable disable

namespace SGKPortalApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(SGKDbContext))]
    [Migration("20250926123602_mig_1")]
    partial class mig_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.DatabaseLog", b =>
                {
                    b.Property<int>("DatabaseLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DatabaseLogId"));

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AfterData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeforeData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IslemZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatabaseLogId");

                    b.ToTable("CMN_DatabaseLoglar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", b =>
                {
                    b.Property<int>("HizmetBinasiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HizmetBinasiId"));

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HizmetBinasiAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("HizmetBinasiAktiflik")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("HizmetBinasiId");

                    b.HasIndex("DepartmanId");

                    b.ToTable("CMN_HizmetBinalari", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.Il", b =>
                {
                    b.Property<int>("IlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlId"));

                    b.Property<string>("IlAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IlId");

                    b.HasIndex("IlAdi")
                        .IsUnique();

                    b.ToTable("CMN_Iller", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.Ilce", b =>
                {
                    b.Property<int>("IlceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlceId"));

                    b.Property<int>("IlId")
                        .HasColumnType("int");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IlceId");

                    b.HasIndex("IlId", "IlceAdi")
                        .IsUnique();

                    b.ToTable("CMN_Ilceler", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.LoginLogoutLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LoginTime");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LogoutTime");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SessionID");

                    b.Property<string>("TcKimlikNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TcKimlikNo");

                    b.HasKey("Id");

                    b.ToTable("CMN_LoginLogoutLoglar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.Modul", b =>
                {
                    b.Property<int>("ModulId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModulId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModulAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModulId");

                    b.ToTable("CMN_Modullar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulAlt", b =>
                {
                    b.Property<int>("ModulAltId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModulAltId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModulAltAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModulId")
                        .HasColumnType("int");

                    b.HasKey("ModulAltId");

                    b.HasIndex("ModulId");

                    b.ToTable("CMN_ModulAltlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulController", b =>
                {
                    b.Property<int>("ModulControllerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModulControllerId"));

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModulControllerAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModulId")
                        .HasColumnType("int");

                    b.HasKey("ModulControllerId");

                    b.HasIndex("ModulId");

                    b.ToTable("CMN_ModulControllerlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulControllerIslem", b =>
                {
                    b.Property<int>("ModulControllerIslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModulControllerIslemId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModulControllerId")
                        .HasColumnType("int");

                    b.Property<string>("ModulControllerIslemAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModulControllerIslemId");

                    b.HasIndex("ModulControllerId");

                    b.ToTable("CMN_ModulControllerIslemlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.User", b =>
                {
                    b.Property<string>("TcKimlikNo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("BasarisizGirisSayisi")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("HesapKilitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SonGirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TelefonNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("TcKimlikNo");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("KullaniciAdi")
                        .IsUnique();

                    b.HasIndex("TcKimlikNo")
                        .IsUnique();

                    b.ToTable("CMN_Userlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.AtanmaNedenleri", b =>
                {
                    b.Property<int>("AtanmaNedeniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AtanmaNedeniId"));

                    b.Property<string>("AtanmaNedeni")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("AtanmaNedeniId");

                    b.ToTable("PER_AtanmaNedenlerilar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmanId"));

                    b.Property<string>("DepartmanAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("DepartmanAktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmanId");

                    b.HasIndex("DepartmanAdi")
                        .IsUnique();

                    b.ToTable("PER_Departmanlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", b =>
                {
                    b.Property<string>("TcKimlikNo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("AtanmaNedeniId")
                        .HasColumnType("int");

                    b.Property<string>("BitirdigiBolum")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BitirdigiOkul")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Bransi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CepTelefonu")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CepTelefonu2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CezaBilgileri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dahili")
                        .HasColumnType("int");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EgitimBilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmekliSicilNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EngelBilgileri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EsininAdi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EsininIsAdresi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EsininIsDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EsininIsIlId")
                        .HasColumnType("int");

                    b.Property<int>("EsininIsIlceId")
                        .HasColumnType("int");

                    b.Property<string>("EsininIsSemt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EsininUnvani")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EvDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvTelefonu")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gorev")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HizmetBilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HizmetBinasiId")
                        .HasColumnType("int");

                    b.Property<int>("IlId")
                        .HasColumnType("int");

                    b.Property<int>("IlceId")
                        .HasColumnType("int");

                    b.Property<string>("ImzaYetkileri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KanGrubu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KartGonderimIslemBasari")
                        .HasColumnType("int");

                    b.Property<int>("KartNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KartNoAktiflikTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KartNoDuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("KartNoGonderimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedeniDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OgrenimDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgrenimSuresi")
                        .HasColumnType("int");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PersonelAktiflikDurum")
                        .HasColumnType("int");

                    b.Property<int>("PersonelKayitNo")
                        .HasColumnType("int");

                    b.Property<string>("PersonelTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SehitYakinligi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SendikaId")
                        .HasColumnType("int");

                    b.Property<int>("ServisId")
                        .HasColumnType("int");

                    b.Property<string>("SessionID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SicilNo")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tabldot")
                        .HasColumnType("int");

                    b.Property<int>("UlasimServis1")
                        .HasColumnType("int");

                    b.Property<int>("UlasimServis2")
                        .HasColumnType("int");

                    b.Property<int>("UnvanId")
                        .HasColumnType("int");

                    b.Property<string>("Uzmanlik")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TcKimlikNo");

                    b.HasIndex("AtanmaNedeniId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EsininIsIlId");

                    b.HasIndex("EsininIsIlceId");

                    b.HasIndex("IlId");

                    b.HasIndex("IlceId");

                    b.HasIndex("PersonelAktiflikDurum");

                    b.HasIndex("SendikaId");

                    b.HasIndex("ServisId");

                    b.HasIndex("SicilNo")
                        .IsUnique();

                    b.HasIndex("TcKimlikNo")
                        .IsUnique();

                    b.HasIndex("UnvanId");

                    b.HasIndex("DepartmanId", "PersonelAktiflikDurum");

                    b.HasIndex("HizmetBinasiId", "PersonelAktiflikDurum");

                    b.ToTable("PER_Personeller", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.PersonelCocuk", b =>
                {
                    b.Property<int>("PersonelCocukId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelCocukId"));

                    b.Property<string>("CocukAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CocukDogumTarihi")
                        .HasColumnType("date");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrenimDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelTcKimlikNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("PersonelCocukId");

                    b.HasIndex("PersonelTcKimlikNo");

                    b.ToTable("PER_PersonelCocuklari", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.PersonelDepartman", b =>
                {
                    b.Property<int>("PersonelDepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelDepartmanId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("PersonelDepartmanId");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("TcKimlikNo");

                    b.ToTable("PER_PersonelDepartmanlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.PersonelYetki", b =>
                {
                    b.Property<int>("PersonelYetkiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelYetkiId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModulControllerIslemId")
                        .HasColumnType("int");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("YetkiId")
                        .HasColumnType("int");

                    b.Property<string>("YetkiTipleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelYetkiId");

                    b.HasIndex("ModulControllerIslemId");

                    b.HasIndex("TcKimlikNo");

                    b.HasIndex("YetkiId");

                    b.ToTable("PER_PersonelYetkileri", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Sendika", b =>
                {
                    b.Property<int>("SendikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SendikaId"));

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendikaAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("SendikaId");

                    b.HasIndex("SendikaAdi")
                        .IsUnique();

                    b.ToTable("PER_Sendikalar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Servis", b =>
                {
                    b.Property<int>("ServisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServisId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServisAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ServisAktiflik")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ServisId");

                    b.HasIndex("ServisAdi")
                        .IsUnique();

                    b.ToTable("PER_Servisler", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Unvan", b =>
                {
                    b.Property<int>("UnvanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnvanId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnvanAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UnvanAktiflik")
                        .HasColumnType("int");

                    b.HasKey("UnvanId");

                    b.HasIndex("UnvanAdi")
                        .IsUnique();

                    b.ToTable("PER_Unvanlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Yetki", b =>
                {
                    b.Property<int>("YetkiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YetkiId"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ActionAdi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ControllerAdi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UstYetkiId")
                        .HasColumnType("int");

                    b.Property<string>("YetkiAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("YetkiTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YetkiId");

                    b.HasIndex("ControllerAdi");

                    b.HasIndex("YetkiAdi");

                    b.HasIndex("UstYetkiId", "YetkiAdi")
                        .IsUnique()
                        .HasFilter("[UstYetkiId] IS NOT NULL");

                    b.ToTable("PER_Yetkiler", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Banko", b =>
                {
                    b.Property<int>("BankoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankoId"));

                    b.Property<int>("BankoAktiflik")
                        .HasColumnType("int");

                    b.Property<int>("BankoNo")
                        .HasColumnType("int");

                    b.Property<string>("BankoTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HizmetBinasiId")
                        .HasColumnType("int");

                    b.Property<int>("KatTipi")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("BankoId");

                    b.HasIndex("HizmetBinasiId", "BankoNo")
                        .IsUnique();

                    b.ToTable("SIR_Bankolar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.BankoIslem", b =>
                {
                    b.Property<int>("BankoIslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankoIslemId"));

                    b.Property<string>("BankoGrup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankoIslemAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("BankoIslemAktiflik")
                        .HasColumnType("int");

                    b.Property<int>("BankoIslemSira")
                        .HasColumnType("int");

                    b.Property<int>("BankoUstIslemId")
                        .HasColumnType("int");

                    b.Property<string>("DiffLang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("BankoIslemId");

                    b.ToTable("SIR_BankoIslemlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.BankoKullanici", b =>
                {
                    b.Property<int>("BankoKullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BankoKullaniciId"));

                    b.Property<int>("BankoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonelTcKimlikNo")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("BankoKullaniciId");

                    b.HasIndex("BankoId")
                        .IsUnique();

                    b.HasIndex("PersonelTcKimlikNo");

                    b.HasIndex("TcKimlikNo")
                        .IsUnique();

                    b.ToTable("SIR_BankoKullanicilari", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.HubConnection", b =>
                {
                    b.Property<int>("HubConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HubConnectionId"));

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IslemZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("HubConnectionId");

                    b.HasIndex("TcKimlikNo")
                        .IsUnique();

                    b.HasIndex("TcKimlikNo", "ConnectionId", "ConnectionStatus");

                    b.ToTable("SIR_HubConnectionlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.HubTvConnection", b =>
                {
                    b.Property<int>("HubTvConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HubTvConnectionId"));

                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("IslemZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("TvId")
                        .HasColumnType("int");

                    b.HasKey("HubTvConnectionId");

                    b.HasIndex("TvId")
                        .IsUnique();

                    b.HasIndex("TvId", "ConnectionId", "ConnectionStatus");

                    b.ToTable("SIR_HubTvConnectionlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Kanal", b =>
                {
                    b.Property<int>("KanalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KanalId"));

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KanalAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KanalId");

                    b.ToTable("SIR_Kanallar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAlt", b =>
                {
                    b.Property<int>("KanalAltId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KanalAltId"));

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KanalAltAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KanalId")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KanalAltId");

                    b.HasIndex("KanalId");

                    b.ToTable("SIR_KanalAltlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAltIslem", b =>
                {
                    b.Property<int>("KanalAltIslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KanalAltIslemId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HizmetBinasiId")
                        .HasColumnType("int");

                    b.Property<int>("KanalAltId")
                        .HasColumnType("int");

                    b.Property<int>("KanalAltIslemAktiflik")
                        .HasColumnType("int");

                    b.Property<int>("KanalIslemId")
                        .HasColumnType("int");

                    b.Property<int?>("KioskIslemGrupId")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KanalAltIslemId");

                    b.HasIndex("HizmetBinasiId");

                    b.HasIndex("KanalAltId");

                    b.HasIndex("KanalIslemId");

                    b.HasIndex("KioskIslemGrupId");

                    b.ToTable("SIR_KanalAltIslemlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalIslem", b =>
                {
                    b.Property<int>("KanalIslemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KanalIslemId"));

                    b.Property<int>("BaslangicNumara")
                        .HasColumnType("int");

                    b.Property<int>("BitisNumara")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HizmetBinasiId")
                        .HasColumnType("int");

                    b.Property<int>("KanalId")
                        .HasColumnType("int");

                    b.Property<int>("KanalIslemAktiflik")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KanalIslemId");

                    b.HasIndex("HizmetBinasiId");

                    b.HasIndex("KanalId");

                    b.ToTable("SIR_KanalIslemlar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalPersonel", b =>
                {
                    b.Property<int>("KanalPersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KanalPersonelId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KanalAltIslemId")
                        .HasColumnType("int");

                    b.Property<int>("KanalAltIslemPersonelAktiflik")
                        .HasColumnType("int");

                    b.Property<string>("PersonelTcKimlikNo")
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("Uzmanlik")
                        .HasColumnType("int");

                    b.HasKey("KanalPersonelId");

                    b.HasIndex("PersonelTcKimlikNo");

                    b.HasIndex("TcKimlikNo");

                    b.HasIndex("KanalAltIslemId", "TcKimlikNo")
                        .IsUnique();

                    b.ToTable("SIR_KanalPersonellar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KioskGrup", b =>
                {
                    b.Property<int>("KioskGrupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KioskGrupId"));

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KioskGrupAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KioskGrupId");

                    b.ToTable("SIR_KioskGruplar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KioskIslemGrup", b =>
                {
                    b.Property<int>("KioskIslemGrupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KioskIslemGrupId"));

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HizmetBinasiId")
                        .HasColumnType("int");

                    b.Property<int>("KanalAltId")
                        .HasColumnType("int");

                    b.Property<int>("KioskGrupId")
                        .HasColumnType("int");

                    b.Property<int>("KioskIslemGrupAktiflik")
                        .HasColumnType("int");

                    b.Property<int>("KioskIslemGrupSira")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KioskIslemGrupId");

                    b.HasIndex("HizmetBinasiId");

                    b.HasIndex("KanalAltId");

                    b.HasIndex("KioskGrupId");

                    b.ToTable("SIR_KioskIslemGruplar", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Sira", b =>
                {
                    b.Property<int>("SiraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiraId"));

                    b.Property<int>("BeklemeDurum")
                        .HasColumnType("int");

                    b.Property<int>("HizmetBinasiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IslemBaslamaZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IslemBitisZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("KanalAltAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KanalAltIslemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiraAlisZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("SiraNo")
                        .HasColumnType("int");

                    b.Property<string>("TcKimlikNo")
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("SiraId");

                    b.HasIndex("BeklemeDurum");

                    b.HasIndex("HizmetBinasiId");

                    b.HasIndex("SiraAlisZamani");

                    b.HasIndex("TcKimlikNo");

                    b.HasIndex("KanalAltIslemId", "BeklemeDurum");

                    b.HasIndex("SiraNo", "HizmetBinasiId", "SiraAlisZamani")
                        .IsUnique();

                    b.ToTable("SIR_Siralar", (string)null);

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Tv", b =>
                {
                    b.Property<int>("TvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TvId"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HizmetBinasiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IslemZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("KatTipi")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("TvId");

                    b.HasIndex("HizmetBinasiId");

                    b.ToTable("SIR_Tvler", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.TvBanko", b =>
                {
                    b.Property<int>("TvBankoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TvBankoId"));

                    b.Property<int>("Aktiflik")
                        .HasColumnType("int");

                    b.Property<int>("BankoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DuzenlenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("EkleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TvId")
                        .HasColumnType("int");

                    b.HasKey("TvBankoId");

                    b.HasIndex("BankoId");

                    b.HasIndex("TvId", "BankoId")
                        .IsUnique();

                    b.ToTable("SIR_TvBankolari", (string)null);
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Departman", "Departman")
                        .WithMany("HizmetBinalari")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.Ilce", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.Il", "Il")
                        .WithMany("Ilceler")
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Il");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulAlt", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.Modul", "Modul")
                        .WithMany("ModulAltlari")
                        .HasForeignKey("ModulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modul");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulController", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.Modul", "Modul")
                        .WithMany("ModulControllers")
                        .HasForeignKey("ModulId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Modul");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulControllerIslem", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulController", "ModulController")
                        .WithMany("ModulControllerIslemler")
                        .HasForeignKey("ModulControllerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ModulController");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.AtanmaNedenleri", "AtanmaNedeni")
                        .WithMany("Personeller")
                        .HasForeignKey("AtanmaNedeniId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Departman", "Departman")
                        .WithMany("Personeller")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.Il", "EsininIsIl")
                        .WithMany()
                        .HasForeignKey("EsininIsIlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.Ilce", "EsininIsIlce")
                        .WithMany()
                        .HasForeignKey("EsininIsIlceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", "HizmetBinasi")
                        .WithMany("Personeller")
                        .HasForeignKey("HizmetBinasiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.Il", "Il")
                        .WithMany()
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Sendika", "Sendika")
                        .WithMany("Personeller")
                        .HasForeignKey("SendikaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Servis", "Servis")
                        .WithMany("Personeller")
                        .HasForeignKey("ServisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Unvan", "Unvan")
                        .WithMany("Personeller")
                        .HasForeignKey("UnvanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AtanmaNedeni");

                    b.Navigation("Departman");

                    b.Navigation("EsininIsIl");

                    b.Navigation("EsininIsIlce");

                    b.Navigation("HizmetBinasi");

                    b.Navigation("Il");

                    b.Navigation("Ilce");

                    b.Navigation("Sendika");

                    b.Navigation("Servis");

                    b.Navigation("Unvan");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.PersonelCocuk", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", "Personel")
                        .WithMany("PersonelCocuklari")
                        .HasForeignKey("PersonelTcKimlikNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.PersonelDepartman", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Departman", "Departman")
                        .WithMany()
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("TcKimlikNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.PersonelYetki", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulControllerIslem", "ModulControllerIslem")
                        .WithMany("PersonelYetkileri")
                        .HasForeignKey("ModulControllerIslemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", "Personel")
                        .WithMany("PersonelYetkileri")
                        .HasForeignKey("TcKimlikNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Yetki", "Yetki")
                        .WithMany("PersonelYetkileri")
                        .HasForeignKey("YetkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModulControllerIslem");

                    b.Navigation("Personel");

                    b.Navigation("Yetki");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Yetki", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Yetki", "UstYetki")
                        .WithMany("AltYetkiler")
                        .HasForeignKey("UstYetkiId");

                    b.Navigation("UstYetki");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Banko", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", "HizmetBinasi")
                        .WithMany("Bankolar")
                        .HasForeignKey("HizmetBinasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HizmetBinasi");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.BankoKullanici", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Banko", "Banko")
                        .WithMany("BankoKullanicilari")
                        .HasForeignKey("BankoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", null)
                        .WithMany("BankoKullanicilari")
                        .HasForeignKey("PersonelTcKimlikNo");

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("TcKimlikNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Banko");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.HubConnection", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", "Personel")
                        .WithOne("HubConnection")
                        .HasForeignKey("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.HubConnection", "TcKimlikNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.HubTvConnection", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Tv", "Tv")
                        .WithOne("HubTvConnection")
                        .HasForeignKey("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.HubTvConnection", "TvId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tv");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAlt", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Kanal", "Kanal")
                        .WithMany("KanalAltlari")
                        .HasForeignKey("KanalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kanal");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAltIslem", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", "HizmetBinasi")
                        .WithMany()
                        .HasForeignKey("HizmetBinasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAlt", "KanalAlt")
                        .WithMany("KanalAltIslemleri")
                        .HasForeignKey("KanalAltId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalIslem", "KanalIslem")
                        .WithMany("KanalAltIslemleri")
                        .HasForeignKey("KanalIslemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KioskIslemGrup", "KioskIslemGrup")
                        .WithMany("KanalAltIslemleri")
                        .HasForeignKey("KioskIslemGrupId");

                    b.Navigation("HizmetBinasi");

                    b.Navigation("KanalAlt");

                    b.Navigation("KanalIslem");

                    b.Navigation("KioskIslemGrup");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalIslem", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", "HizmetBinasi")
                        .WithMany()
                        .HasForeignKey("HizmetBinasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Kanal", "Kanal")
                        .WithMany("KanalIslemleri")
                        .HasForeignKey("KanalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HizmetBinasi");

                    b.Navigation("Kanal");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalPersonel", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAltIslem", "KanalAltIslem")
                        .WithMany("KanalPersonelleri")
                        .HasForeignKey("KanalAltIslemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", null)
                        .WithMany("KanalPersonelleri")
                        .HasForeignKey("PersonelTcKimlikNo");

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("TcKimlikNo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KanalAltIslem");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KioskIslemGrup", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", "HizmetBinasi")
                        .WithMany()
                        .HasForeignKey("HizmetBinasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAlt", "KanalAlt")
                        .WithMany()
                        .HasForeignKey("KanalAltId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KioskGrup", "KioskGrup")
                        .WithMany("KioskIslemGruplari")
                        .HasForeignKey("KioskGrupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HizmetBinasi");

                    b.Navigation("KanalAlt");

                    b.Navigation("KioskGrup");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Sira", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", "HizmetBinasi")
                        .WithMany()
                        .HasForeignKey("HizmetBinasiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAltIslem", "KanalAltIslem")
                        .WithMany("Siralar")
                        .HasForeignKey("KanalAltIslemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("TcKimlikNo")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HizmetBinasi");

                    b.Navigation("KanalAltIslem");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Tv", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", "HizmetBinasi")
                        .WithMany("Tvler")
                        .HasForeignKey("HizmetBinasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HizmetBinasi");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.TvBanko", b =>
                {
                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Banko", "Banko")
                        .WithMany("TvBankolar")
                        .HasForeignKey("BankoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Tv", "Tv")
                        .WithMany("TvBankolar")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Banko");

                    b.Navigation("Tv");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.HizmetBinasi", b =>
                {
                    b.Navigation("Bankolar");

                    b.Navigation("Personeller");

                    b.Navigation("Tvler");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.Il", b =>
                {
                    b.Navigation("Ilceler");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.Modul", b =>
                {
                    b.Navigation("ModulAltlari");

                    b.Navigation("ModulControllers");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulController", b =>
                {
                    b.Navigation("ModulControllerIslemler");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.Common.ModulControllerIslem", b =>
                {
                    b.Navigation("PersonelYetkileri");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.AtanmaNedenleri", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Departman", b =>
                {
                    b.Navigation("HizmetBinalari");

                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Personel", b =>
                {
                    b.Navigation("BankoKullanicilari");

                    b.Navigation("HubConnection");

                    b.Navigation("KanalPersonelleri");

                    b.Navigation("PersonelCocuklari");

                    b.Navigation("PersonelYetkileri");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Sendika", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Servis", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Unvan", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.PersonelIslemleri.Yetki", b =>
                {
                    b.Navigation("AltYetkiler");

                    b.Navigation("PersonelYetkileri");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Banko", b =>
                {
                    b.Navigation("BankoKullanicilari");

                    b.Navigation("TvBankolar");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Kanal", b =>
                {
                    b.Navigation("KanalAltlari");

                    b.Navigation("KanalIslemleri");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAlt", b =>
                {
                    b.Navigation("KanalAltIslemleri");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalAltIslem", b =>
                {
                    b.Navigation("KanalPersonelleri");

                    b.Navigation("Siralar");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KanalIslem", b =>
                {
                    b.Navigation("KanalAltIslemleri");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KioskGrup", b =>
                {
                    b.Navigation("KioskIslemGruplari");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.KioskIslemGrup", b =>
                {
                    b.Navigation("KanalAltIslemleri");
                });

            modelBuilder.Entity("SGKPortalApp.BusinessObjectLayer.Entities.SiramatikIslemleri.Tv", b =>
                {
                    b.Navigation("HubTvConnection");

                    b.Navigation("TvBankolar");
                });
#pragma warning restore 612, 618
        }
    }
}
